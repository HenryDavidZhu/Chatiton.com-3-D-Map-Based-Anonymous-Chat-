{
  "_from": "@mapbox/mapbox-gl-draw",
  "_id": "@mapbox/mapbox-gl-draw@1.1.2",
  "_inBundle": false,
  "_integrity": "sha512-DWtATUAnJaGZYoH/y2O+QTRybxrp5y3w3eV5FXHFNVcKsCAojKEMB8ALKUG2IsiCKqV/JCAguK9AlPWR7Bjafw==",
  "_location": "/@mapbox/mapbox-gl-draw",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@mapbox%2fmapbox-gl-draw",
    "fetchSpec": "latest",
    "name": "@mapbox/mapbox-gl-draw",
    "raw": "@mapbox/mapbox-gl-draw",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "scope": "@mapbox",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/@mapbox/mapbox-gl-draw/-/mapbox-gl-draw-1.1.2.tgz",
  "_shasum": "247b3f0727db34c2641ab718df5eebeee69a2585",
  "_spec": "@mapbox/mapbox-gl-draw",
  "_where": "C:\\Users\\Henry Zhu\\Desktop\\chatiton",
  "author": {
    "name": "mapbox"
  },
  "browserify": {
    "transform": [
      "babelify",
      "envify"
    ]
  },
  "bugs": {
    "url": "https://github.com/mapbox/mapbox-gl-draw/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@mapbox/geojson-area": "^0.2.1",
    "@mapbox/geojson-extent": "^0.3.2",
    "@mapbox/geojson-normalize": "0.0.1",
    "@mapbox/geojsonhint": "^2.0.0",
    "@mapbox/point-geometry": "0.1.0",
    "hat": "0.0.3",
    "lodash.isequal": "^4.2.0",
    "xtend": "^4.0.1"
  },
  "deprecated": false,
  "description": "A drawing component for Mapbox GL JS",
  "devDependencies": {
    "@babel/core": "^7.1.2",
    "@babel/preset-env": "^7.1.0",
    "@babel/register": "^7.0.0",
    "@mapbox/mapbox-gl-draw-static-mode": "^1.0.1",
    "@turf/centroid": "^6.0.0",
    "babel-eslint": "^8.0.3",
    "babel-plugin-istanbul": "^5.1.0",
    "babelify": "^10.0.0",
    "browserify": "^16.1.1",
    "browserify-middleware": "^8.1.0",
    "envify": "^4.0.0",
    "eslint": "^4.2.0",
    "eslint-config-mourner": "^2.0.1",
    "express": "^4.13.4",
    "mapbox-gl": "0.51.0",
    "mapbox-gl-js-mock": "0.28.0",
    "mock-browser": "^0.92.10",
    "nyc": "^12.0.1",
    "opener": "^1.4.1",
    "sinon": "5.0.0",
    "synthetic-dom-events": "0.3.0",
    "tape": "^4.0.0",
    "uglify-js": "^3.0.22",
    "unassertify": "^2.0.3"
  },
  "homepage": "https://github.com/mapbox/mapbox-gl-draw",
  "keywords": [
    "draw",
    "drawing",
    "mapbox",
    "webgl"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "@mapbox/mapbox-gl-draw",
  "nyc": {
    "instrument": false,
    "sourceMap": false
  },
  "optionalDependencies": {},
  "peerDependencies": {
    "mapbox-gl": ">=0.27.0 <2.0.0"
  },
  "readme": "# @mapbox/mapbox-gl-draw\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/mapbox/mapbox-gl-draw.svg)](https://greenkeeper.io/) [![Build Status](https://travis-ci.org/mapbox/mapbox-gl-draw.svg?branch=master)](https://travis-ci.org/mapbox/mapbox-gl-draw)\n\nAdds support for drawing and editing features on [mapbox-gl.js](https://www.mapbox.com/mapbox-gl-js/) maps. [See a live example here](https://www.mapbox.com/mapbox-gl-js/example/mapbox-gl-draw/)\n\n**Requires [mapbox-gl-js](https://github.com/mapbox/mapbox-gl-js). Compatible versions are documented in the package.json**\n\n**On NPM this package has recently moved from `mapbox-gl-draw` to `@mapbox/mapbox-gl-draw`**\n\n### Installing\n\n```\nnpm install @mapbox/mapbox-gl-draw\n```\n\nDraw ships with CSS, make sure you include it in your build.  \n**When using modules**\n ```js\nrequire('@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css')\n// or\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css'\n ```\n\n**When using CDN**\n```html\n<link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.0.9/mapbox-gl-draw.css' type='text/css' />\n```\n\n### Usage in your application\n\n**When using modules**\n\n```js\nvar mapboxgl = require('mapbox-gl');\nvar MapboxDraw = require('@mapbox/mapbox-gl-draw');\n```\n\n**When using a CDN**\n\n```html\n<script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.0.9/mapbox-gl-draw.js'></script>\n```\n\n**Example setup**\n\n```js\nmapboxgl.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar map = new mapboxgl.Map({\n  container: 'map',\n  style: 'mapbox://styles/mapbox/streets-v8',\n  center: [40, -74.50],\n  zoom: 9\n});\n\nvar Draw = new MapboxDraw();\n\n// Map#addControl takes an optional second argument to set the position of the control.\n// If no position is specified the control defaults to `top-right`. See the docs \n// for more details: https://www.mapbox.com/mapbox-gl-js/api/map#addcontrol\n\nmap.addControl(Draw, 'top-left');\n\nmap.on('load', function() {\n  // ALL YOUR APPLICATION CODE\n});\n```\n\nhttps://www.mapbox.com/mapbox-gl-js/example/mapbox-gl-draw/\n\n### See [API.md](https://github.com/mapbox/mapbox-gl-draw/blob/master/docs/API.md) for complete reference.\n\n### Enhancements and New Interactions\n\nFor additional functionality [check out our list of custom modes](https://github.com/mapbox/mapbox-gl-draw/blob/master/docs/MODES.md#available-custom-modes).\n\nMapbox Draw accepts functionality changes after the functionality has been proven out via a [custom mode](https://github.com/mapbox/mapbox-gl-draw/blob/master/docs/MODES.md#creating-modes-for-mapbox-draw). This lets users experiment and validate their mode before entering a review process, hopefully promoting innovation. When you write a custom mode, please open a PR adding it to our [list of custom modes](https://github.com/mapbox/mapbox-gl-draw/blob/master/docs/MODES.md#available-custom-modes).\n\n### Developing and testing\n\nInstall dependencies, build the source files and crank up a server via:\n\n```\ngit clone git@github.com:mapbox/mapbox-gl-draw.git\nyarn install\nyarn start & open \"http://localhost:9967/debug/?access_token=<token>\"\n```\n\n### Testing\n\n```\nnpm run test\n```\n\n### Publishing\n\nTo github and npm\n\n```\nnpm version (major|minor|patch)\ngit push --tags\ngit push\nnpm publish\n```\n\nUpdate the version number in [the GL JS example](https://github.com/mapbox/mapbox-gl-js/blob/mb-pages/docs/pages/example/mapbox-gl-draw.html).\n\n### Naming actions\n\nWe're trying to follow standards when naming things. Here is a collection of links where we look for inspiration.\n\n- http://turfjs.org\n- https://shapely.readthedocs.io/en/latest/manual.html\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mapbox/mapbox-gl-draw.git"
  },
  "scripts": {
    "build": "NODE_ENV=production browserify index.js --standalone MapboxDraw > dist/mapbox-gl-draw-unminified.js",
    "build-min": "NODE_ENV=production browserify index.js --standalone MapboxDraw | uglifyjs -c -m > dist/mapbox-gl-draw.js",
    "build-token": "node build/generate-access-token-script.js",
    "coverage": "NODE_ENV=test nyc --reporter html npm run tape && opener coverage/index.html",
    "docs": "npm run docs-modes-life-cycle && npm run docs-modes-get-and-set",
    "docs-modes-get-and-set": "documentation readme --readme-file ./docs/MODES.md -s \"Setters and Getters\" src/modes/mode_interface_accessors.js --shallow",
    "docs-modes-life-cycle": "documentation readme --readme-file ./docs/MODES.md -s \"Life Cycle Functions\" src/modes/mode_interface.js --shallow",
    "lint": "eslint --no-eslintrc -c .eslintrc index.js src test",
    "prepublish": "npm run build && npm run build-min",
    "start": "npm run build-token && node server.js",
    "tape": "tape -r ./test/mock-browser.js -r @babel/register test/*.test.js",
    "test": "NODE_ENV=test npm run lint && npm run tape"
  },
  "style": "dist/mapbox-gl-draw.css",
  "version": "1.1.2"
}
